document.addEventListener('DOMContentLoaded', async () => {
    const chatContainer = document.querySelector('.messages');
    const inputField = document.querySelector('#chat-input');
    const sendButton = document.querySelector('#send-button');

    // Get or create user ID
    let userId = localStorage.getItem('userId');
    const res = await fetch('/user', { headers: { 'x-user-id': userId || '' } });
    const data = await res.json();
    userId = data.userId;
    localStorage.setItem('userId', userId);

    // Load previous messages
    data.messages.forEach(msg => appendMessage(msg.content, msg.role));

    function appendMessage(message, sender) {
        const messageEl = document.createElement('div');
        messageEl.classList.add('message', sender);
        messageEl.innerHTML = message.replace(/\n/g, '<br>');
        chatContainer.appendChild(messageEl);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    async function sendMessage() {
        const message = inputField.value.trim();
        if (!message) return;

        appendMessage(message, 'user');
        inputField.value = '';

        try {
            const response = await fetch('/chat', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userId, message })
            });

            const data = await response.json();
            appendMessage(data.response || 'No response', 'assistant');

        } catch (err) {
            console.error(err);
            appendMessage('Error connecting to backend.', 'assistant');
        }
    }

    sendButton.addEventListener('click', sendMessage);
    inputField.addEventListener('keypress', e => {
        if (e.key === 'Enter') sendMessage();
    });
});
